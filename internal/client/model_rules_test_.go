/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RulesTest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RulesTest{}

// RulesTest struct for RulesTest
type RulesTest struct {
	// The duration of time taken to execute the rules on the test input in microseconds.
	Duration    int32                   `json:"duration"`
	ReqResponse InspectorResMsgResponse `json:"req_response"`
	ResResponse InspectorReqMsgResponse `json:"res_response"`
	Output      []RulesTestOutputInner  `json:"output"`
}

type _RulesTest RulesTest

// NewRulesTest instantiates a new RulesTest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRulesTest(duration int32, reqResponse InspectorResMsgResponse, resResponse InspectorReqMsgResponse, output []RulesTestOutputInner) *RulesTest {
	this := RulesTest{}
	this.Duration = duration
	this.ReqResponse = reqResponse
	this.ResResponse = resResponse
	this.Output = output
	return &this
}

// NewRulesTestWithDefaults instantiates a new RulesTest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRulesTestWithDefaults() *RulesTest {
	this := RulesTest{}
	return &this
}

// GetDuration returns the Duration field value
func (o *RulesTest) GetDuration() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *RulesTest) GetDurationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *RulesTest) SetDuration(v int32) {
	o.Duration = v
}

// GetReqResponse returns the ReqResponse field value
func (o *RulesTest) GetReqResponse() InspectorResMsgResponse {
	if o == nil {
		var ret InspectorResMsgResponse
		return ret
	}

	return o.ReqResponse
}

// GetReqResponseOk returns a tuple with the ReqResponse field value
// and a boolean to check if the value has been set.
func (o *RulesTest) GetReqResponseOk() (*InspectorResMsgResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReqResponse, true
}

// SetReqResponse sets field value
func (o *RulesTest) SetReqResponse(v InspectorResMsgResponse) {
	o.ReqResponse = v
}

// GetResResponse returns the ResResponse field value
func (o *RulesTest) GetResResponse() InspectorReqMsgResponse {
	if o == nil {
		var ret InspectorReqMsgResponse
		return ret
	}

	return o.ResResponse
}

// GetResResponseOk returns a tuple with the ResResponse field value
// and a boolean to check if the value has been set.
func (o *RulesTest) GetResResponseOk() (*InspectorReqMsgResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResResponse, true
}

// SetResResponse sets field value
func (o *RulesTest) SetResResponse(v InspectorReqMsgResponse) {
	o.ResResponse = v
}

// GetOutput returns the Output field value
func (o *RulesTest) GetOutput() []RulesTestOutputInner {
	if o == nil {
		var ret []RulesTestOutputInner
		return ret
	}

	return o.Output
}

// GetOutputOk returns a tuple with the Output field value
// and a boolean to check if the value has been set.
func (o *RulesTest) GetOutputOk() ([]RulesTestOutputInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Output, true
}

// SetOutput sets field value
func (o *RulesTest) SetOutput(v []RulesTestOutputInner) {
	o.Output = v
}

func (o RulesTest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RulesTest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["duration"] = o.Duration
	toSerialize["req_response"] = o.ReqResponse
	toSerialize["res_response"] = o.ResResponse
	toSerialize["output"] = o.Output
	return toSerialize, nil
}

func (o *RulesTest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"duration",
		"req_response",
		"res_response",
		"output",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRulesTest := _RulesTest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRulesTest)

	if err != nil {
		return err
	}

	*o = RulesTest(varRulesTest)

	return err
}

type NullableRulesTest struct {
	value *RulesTest
	isSet bool
}

func (v NullableRulesTest) Get() *RulesTest {
	return v.value
}

func (v *NullableRulesTest) Set(val *RulesTest) {
	v.value = val
	v.isSet = true
}

func (v NullableRulesTest) IsSet() bool {
	return v.isSet
}

func (v *NullableRulesTest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRulesTest(val *RulesTest) *NullableRulesTest {
	return &NullableRulesTest{value: val, isSet: true}
}

func (v NullableRulesTest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRulesTest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
