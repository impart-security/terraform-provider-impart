/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the RulesScript type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RulesScript{}

// RulesScript struct for RulesScript
type RulesScript struct {
	Id          string     `json:"id"`
	Name        string     `json:"name"`
	Description string     `json:"description"`
	Disabled    bool       `json:"disabled"`
	Src         string     `json:"src"`
	Revision    int32      `json:"revision"`
	UpdatedBy   string     `json:"updated_by"`
	// The date and time in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) format.
	UpdatedAt time.Time `json:"updated_at"`
}

// NewRulesScript instantiates a new RulesScript object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRulesScript(id string, name string, description string, disabled bool, src string, revision int32, updatedBy string, updatedAt time.Time) *RulesScript {
	this := RulesScript{}
	this.Id = id
	this.Name = name
	this.Description = description
	this.Disabled = disabled
	this.Src = src
	this.Revision = revision
	this.UpdatedBy = updatedBy
	this.UpdatedAt = updatedAt
	return &this
}

// NewRulesScriptWithDefaults instantiates a new RulesScript object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRulesScriptWithDefaults() *RulesScript {
	this := RulesScript{}
	return &this
}

// GetId returns the Id field value
func (o *RulesScript) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RulesScript) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *RulesScript) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RulesScript) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *RulesScript) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *RulesScript) SetDescription(v string) {
	o.Description = v
}

// GetDisabled returns the Disabled field value
func (o *RulesScript) GetDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Disabled, true
}

// SetDisabled sets field value
func (o *RulesScript) SetDisabled(v bool) {
	o.Disabled = v
}

// GetSrc returns the Src field value
func (o *RulesScript) GetSrc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Src
}

// GetSrcOk returns a tuple with the Src field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetSrcOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Src, true
}

// SetSrc sets field value
func (o *RulesScript) SetSrc(v string) {
	o.Src = v
}

// GetRevision returns the Revision field value
func (o *RulesScript) GetRevision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetRevisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *RulesScript) SetRevision(v int32) {
	o.Revision = v
}

// GetUpdatedBy returns the UpdatedBy field value
func (o *RulesScript) GetUpdatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedBy, true
}

// SetUpdatedBy sets field value
func (o *RulesScript) SetUpdatedBy(v string) {
	o.UpdatedBy = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *RulesScript) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *RulesScript) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o RulesScript) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RulesScript) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	toSerialize["disabled"] = o.Disabled
	toSerialize["src"] = o.Src
	toSerialize["revision"] = o.Revision
	toSerialize["updated_by"] = o.UpdatedBy
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

type NullableRulesScript struct {
	value *RulesScript
	isSet bool
}

func (v NullableRulesScript) Get() *RulesScript {
	return v.value
}

func (v *NullableRulesScript) Set(val *RulesScript) {
	v.value = val
	v.isSet = true
}

func (v NullableRulesScript) IsSet() bool {
	return v.isSet
}

func (v *NullableRulesScript) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRulesScript(val *RulesScript) *NullableRulesScript {
	return &NullableRulesScript{value: val, isSet: true}
}

func (v NullableRulesScript) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRulesScript) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
