/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the RulesScript type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RulesScript{}

// RulesScript struct for RulesScript
type RulesScript struct {
	Id                       string     `json:"id"`
	Name                     string     `json:"name"`
	Description              string     `json:"description"`
	Type                     string     `json:"type"`
	Disabled                 bool       `json:"disabled"`
	Src                      string     `json:"src"`
	Lang                     string     `json:"lang"`
	AutogeneratedExplanation string     `json:"autogenerated_explanation"`
	Revision                 int32      `json:"revision"`
	Revisions                []Revision `json:"revisions"`
	Dependencies             []string   `json:"dependencies"`
	CreatedBy                string     `json:"created_by"`
	// The date and time in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) format.
	CreatedAt time.Time      `json:"created_at"`
	UpdatedBy NullableString `json:"updated_by"`
	// The date and time in [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) format.
	UpdatedAt NullableTime `json:"updated_at"`
}

type _RulesScript RulesScript

// NewRulesScript instantiates a new RulesScript object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRulesScript(id string, name string, description string, type_ string, disabled bool, src string, lang string, autogeneratedExplanation string, revision int32, revisions []Revision, dependencies []string, createdBy string, createdAt time.Time, updatedBy NullableString, updatedAt NullableTime) *RulesScript {
	this := RulesScript{}
	this.Id = id
	this.Name = name
	this.Description = description
	this.Type = type_
	this.Disabled = disabled
	this.Src = src
	this.Lang = lang
	this.AutogeneratedExplanation = autogeneratedExplanation
	this.Revision = revision
	this.Revisions = revisions
	this.Dependencies = dependencies
	this.CreatedBy = createdBy
	this.CreatedAt = createdAt
	this.UpdatedBy = updatedBy
	this.UpdatedAt = updatedAt
	return &this
}

// NewRulesScriptWithDefaults instantiates a new RulesScript object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRulesScriptWithDefaults() *RulesScript {
	this := RulesScript{}
	return &this
}

// GetId returns the Id field value
func (o *RulesScript) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RulesScript) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *RulesScript) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RulesScript) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *RulesScript) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *RulesScript) SetDescription(v string) {
	o.Description = v
}

// GetType returns the Type field value
func (o *RulesScript) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RulesScript) SetType(v string) {
	o.Type = v
}

// GetDisabled returns the Disabled field value
func (o *RulesScript) GetDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Disabled, true
}

// SetDisabled sets field value
func (o *RulesScript) SetDisabled(v bool) {
	o.Disabled = v
}

// GetSrc returns the Src field value
func (o *RulesScript) GetSrc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Src
}

// GetSrcOk returns a tuple with the Src field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetSrcOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Src, true
}

// SetSrc sets field value
func (o *RulesScript) SetSrc(v string) {
	o.Src = v
}

// GetLang returns the Lang field value
func (o *RulesScript) GetLang() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Lang
}

// GetLangOk returns a tuple with the Lang field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetLangOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Lang, true
}

// SetLang sets field value
func (o *RulesScript) SetLang(v string) {
	o.Lang = v
}

// GetAutogeneratedExplanation returns the AutogeneratedExplanation field value
func (o *RulesScript) GetAutogeneratedExplanation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AutogeneratedExplanation
}

// GetAutogeneratedExplanationOk returns a tuple with the AutogeneratedExplanation field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetAutogeneratedExplanationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutogeneratedExplanation, true
}

// SetAutogeneratedExplanation sets field value
func (o *RulesScript) SetAutogeneratedExplanation(v string) {
	o.AutogeneratedExplanation = v
}

// GetRevision returns the Revision field value
func (o *RulesScript) GetRevision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetRevisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *RulesScript) SetRevision(v int32) {
	o.Revision = v
}

// GetRevisions returns the Revisions field value
func (o *RulesScript) GetRevisions() []Revision {
	if o == nil {
		var ret []Revision
		return ret
	}

	return o.Revisions
}

// GetRevisionsOk returns a tuple with the Revisions field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetRevisionsOk() ([]Revision, bool) {
	if o == nil {
		return nil, false
	}
	return o.Revisions, true
}

// SetRevisions sets field value
func (o *RulesScript) SetRevisions(v []Revision) {
	o.Revisions = v
}

// GetDependencies returns the Dependencies field value
func (o *RulesScript) GetDependencies() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Dependencies
}

// GetDependenciesOk returns a tuple with the Dependencies field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetDependenciesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dependencies, true
}

// SetDependencies sets field value
func (o *RulesScript) SetDependencies(v []string) {
	o.Dependencies = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *RulesScript) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *RulesScript) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *RulesScript) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *RulesScript) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *RulesScript) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedBy returns the UpdatedBy field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RulesScript) GetUpdatedBy() string {
	if o == nil || o.UpdatedBy.Get() == nil {
		var ret string
		return ret
	}

	return *o.UpdatedBy.Get()
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RulesScript) GetUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedBy.Get(), o.UpdatedBy.IsSet()
}

// SetUpdatedBy sets field value
func (o *RulesScript) SetUpdatedBy(v string) {
	o.UpdatedBy.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *RulesScript) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RulesScript) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// SetUpdatedAt sets field value
func (o *RulesScript) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

func (o RulesScript) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RulesScript) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	toSerialize["type"] = o.Type
	toSerialize["disabled"] = o.Disabled
	toSerialize["src"] = o.Src
	toSerialize["lang"] = o.Lang
	toSerialize["autogenerated_explanation"] = o.AutogeneratedExplanation
	toSerialize["revision"] = o.Revision
	toSerialize["revisions"] = o.Revisions
	toSerialize["dependencies"] = o.Dependencies
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_by"] = o.UpdatedBy.Get()
	toSerialize["updated_at"] = o.UpdatedAt.Get()
	return toSerialize, nil
}

func (o *RulesScript) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"description",
		"type",
		"disabled",
		"src",
		"lang",
		"autogenerated_explanation",
		"revision",
		"revisions",
		"dependencies",
		"created_by",
		"created_at",
		"updated_by",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRulesScript := _RulesScript{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRulesScript)

	if err != nil {
		return err
	}

	*o = RulesScript(varRulesScript)

	return err
}

type NullableRulesScript struct {
	value *RulesScript
	isSet bool
}

func (v NullableRulesScript) Get() *RulesScript {
	return v.value
}

func (v *NullableRulesScript) Set(val *RulesScript) {
	v.value = val
	v.isSet = true
}

func (v NullableRulesScript) IsSet() bool {
	return v.isSet
}

func (v *NullableRulesScript) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRulesScript(val *RulesScript) *NullableRulesScript {
	return &NullableRulesScript{value: val, isSet: true}
}

func (v NullableRulesScript) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRulesScript) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
