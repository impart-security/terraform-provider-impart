/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the InspectorReqMsgResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InspectorReqMsgResponse{}

// InspectorReqMsgResponse The result of inspecting an HTTP request.
type InspectorReqMsgResponse struct {
	// will contain any error encountered during the inspection. A non-empty error is equivalent to failing open.
	Error *string `json:"error,omitempty"`
	// If true, the request will be blocked. If false, the request will be allowed.
	Block bool `json:"block"`
	// The HTTP status code.
	StatusCode *int32 `json:"status_code,omitempty"`
	// The URL to redirect to.
	RedirectUrl *string `json:"redirect_url,omitempty"`
	// Additional HTTP header keys to add to the response. Each key should have a corresponding additional_header_values at the matching index.
	AdditionalHeaderKeys []string `json:"additional_header_keys,omitempty"`
	// Additional HTTP header values to add to the response. Each value should have a corresponding additional_header_keys at the matching index.
	AdditionalHeaderValues []string `json:"additional_header_values,omitempty"`
	// HTTP header keys to delete from the response.
	DeletedHeaderKeys []string `json:"deleted_header_keys,omitempty"`
	// Tags to apply.
	Tags []string `json:"tags,omitempty"`
}

type _InspectorReqMsgResponse InspectorReqMsgResponse

// NewInspectorReqMsgResponse instantiates a new InspectorReqMsgResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInspectorReqMsgResponse(block bool) *InspectorReqMsgResponse {
	this := InspectorReqMsgResponse{}
	this.Block = block
	return &this
}

// NewInspectorReqMsgResponseWithDefaults instantiates a new InspectorReqMsgResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInspectorReqMsgResponseWithDefaults() *InspectorReqMsgResponse {
	this := InspectorReqMsgResponse{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *InspectorReqMsgResponse) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectorReqMsgResponse) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *InspectorReqMsgResponse) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *InspectorReqMsgResponse) SetError(v string) {
	o.Error = &v
}

// GetBlock returns the Block field value
func (o *InspectorReqMsgResponse) GetBlock() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Block
}

// GetBlockOk returns a tuple with the Block field value
// and a boolean to check if the value has been set.
func (o *InspectorReqMsgResponse) GetBlockOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Block, true
}

// SetBlock sets field value
func (o *InspectorReqMsgResponse) SetBlock(v bool) {
	o.Block = v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *InspectorReqMsgResponse) GetStatusCode() int32 {
	if o == nil || IsNil(o.StatusCode) {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectorReqMsgResponse) GetStatusCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *InspectorReqMsgResponse) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *InspectorReqMsgResponse) SetStatusCode(v int32) {
	o.StatusCode = &v
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *InspectorReqMsgResponse) GetRedirectUrl() string {
	if o == nil || IsNil(o.RedirectUrl) {
		var ret string
		return ret
	}
	return *o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectorReqMsgResponse) GetRedirectUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectUrl) {
		return nil, false
	}
	return o.RedirectUrl, true
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *InspectorReqMsgResponse) HasRedirectUrl() bool {
	if o != nil && !IsNil(o.RedirectUrl) {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *InspectorReqMsgResponse) SetRedirectUrl(v string) {
	o.RedirectUrl = &v
}

// GetAdditionalHeaderKeys returns the AdditionalHeaderKeys field value if set, zero value otherwise.
func (o *InspectorReqMsgResponse) GetAdditionalHeaderKeys() []string {
	if o == nil || IsNil(o.AdditionalHeaderKeys) {
		var ret []string
		return ret
	}
	return o.AdditionalHeaderKeys
}

// GetAdditionalHeaderKeysOk returns a tuple with the AdditionalHeaderKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectorReqMsgResponse) GetAdditionalHeaderKeysOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalHeaderKeys) {
		return nil, false
	}
	return o.AdditionalHeaderKeys, true
}

// HasAdditionalHeaderKeys returns a boolean if a field has been set.
func (o *InspectorReqMsgResponse) HasAdditionalHeaderKeys() bool {
	if o != nil && !IsNil(o.AdditionalHeaderKeys) {
		return true
	}

	return false
}

// SetAdditionalHeaderKeys gets a reference to the given []string and assigns it to the AdditionalHeaderKeys field.
func (o *InspectorReqMsgResponse) SetAdditionalHeaderKeys(v []string) {
	o.AdditionalHeaderKeys = v
}

// GetAdditionalHeaderValues returns the AdditionalHeaderValues field value if set, zero value otherwise.
func (o *InspectorReqMsgResponse) GetAdditionalHeaderValues() []string {
	if o == nil || IsNil(o.AdditionalHeaderValues) {
		var ret []string
		return ret
	}
	return o.AdditionalHeaderValues
}

// GetAdditionalHeaderValuesOk returns a tuple with the AdditionalHeaderValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectorReqMsgResponse) GetAdditionalHeaderValuesOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalHeaderValues) {
		return nil, false
	}
	return o.AdditionalHeaderValues, true
}

// HasAdditionalHeaderValues returns a boolean if a field has been set.
func (o *InspectorReqMsgResponse) HasAdditionalHeaderValues() bool {
	if o != nil && !IsNil(o.AdditionalHeaderValues) {
		return true
	}

	return false
}

// SetAdditionalHeaderValues gets a reference to the given []string and assigns it to the AdditionalHeaderValues field.
func (o *InspectorReqMsgResponse) SetAdditionalHeaderValues(v []string) {
	o.AdditionalHeaderValues = v
}

// GetDeletedHeaderKeys returns the DeletedHeaderKeys field value if set, zero value otherwise.
func (o *InspectorReqMsgResponse) GetDeletedHeaderKeys() []string {
	if o == nil || IsNil(o.DeletedHeaderKeys) {
		var ret []string
		return ret
	}
	return o.DeletedHeaderKeys
}

// GetDeletedHeaderKeysOk returns a tuple with the DeletedHeaderKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectorReqMsgResponse) GetDeletedHeaderKeysOk() ([]string, bool) {
	if o == nil || IsNil(o.DeletedHeaderKeys) {
		return nil, false
	}
	return o.DeletedHeaderKeys, true
}

// HasDeletedHeaderKeys returns a boolean if a field has been set.
func (o *InspectorReqMsgResponse) HasDeletedHeaderKeys() bool {
	if o != nil && !IsNil(o.DeletedHeaderKeys) {
		return true
	}

	return false
}

// SetDeletedHeaderKeys gets a reference to the given []string and assigns it to the DeletedHeaderKeys field.
func (o *InspectorReqMsgResponse) SetDeletedHeaderKeys(v []string) {
	o.DeletedHeaderKeys = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InspectorReqMsgResponse) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InspectorReqMsgResponse) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InspectorReqMsgResponse) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *InspectorReqMsgResponse) SetTags(v []string) {
	o.Tags = v
}

func (o InspectorReqMsgResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InspectorReqMsgResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	toSerialize["block"] = o.Block
	if !IsNil(o.StatusCode) {
		toSerialize["status_code"] = o.StatusCode
	}
	if !IsNil(o.RedirectUrl) {
		toSerialize["redirect_url"] = o.RedirectUrl
	}
	if !IsNil(o.AdditionalHeaderKeys) {
		toSerialize["additional_header_keys"] = o.AdditionalHeaderKeys
	}
	if !IsNil(o.AdditionalHeaderValues) {
		toSerialize["additional_header_values"] = o.AdditionalHeaderValues
	}
	if !IsNil(o.DeletedHeaderKeys) {
		toSerialize["deleted_header_keys"] = o.DeletedHeaderKeys
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *InspectorReqMsgResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"block",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInspectorReqMsgResponse := _InspectorReqMsgResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInspectorReqMsgResponse)

	if err != nil {
		return err
	}

	*o = InspectorReqMsgResponse(varInspectorReqMsgResponse)

	return err
}

type NullableInspectorReqMsgResponse struct {
	value *InspectorReqMsgResponse
	isSet bool
}

func (v NullableInspectorReqMsgResponse) Get() *InspectorReqMsgResponse {
	return v.value
}

func (v *NullableInspectorReqMsgResponse) Set(val *InspectorReqMsgResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInspectorReqMsgResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInspectorReqMsgResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInspectorReqMsgResponse(val *InspectorReqMsgResponse) *NullableInspectorReqMsgResponse {
	return &NullableInspectorReqMsgResponse{value: val, isSet: true}
}

func (v NullableInspectorReqMsgResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInspectorReqMsgResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
