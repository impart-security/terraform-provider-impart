/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// checks if the ApiTestPostBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiTestPostBody{}

// ApiTestPostBody struct for ApiTestPostBody
type ApiTestPostBody struct {
	// The auth secret ID.
	AuthSecretId *string `json:"auth_secret_id,omitempty"`
	// Whether to use TLS.
	UseTls *bool `json:"use_tls,omitempty"`
	// The endpoint ID.
	EndpointId string `json:"endpoint_id"`
	// The binding ID.
	ApiBindingId string `json:"api_binding_id"`
	// The base64 encoded HTTP request body.
	Body *string `json:"body,omitempty"`
	// The HTTP request header keys. Each key should have a corresponding header_values at the matching index.
	HeaderKeys []string `json:"header_keys,omitempty"`
	// The HTTP request header values. Each value should have a corresponding header_keys at the matching index.
	HeaderValues []string `json:"header_values,omitempty"`
	// The HTTP request cookie keys. Each key should have a corresponding cookie_values at the matching index.
	CookieKeys []string `json:"cookie_keys,omitempty"`
	// The HTTP request cookie values. Each value should have a corresponding cookie_keys at the matching index.
	CookieValues         []string `json:"cookie_values,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApiTestPostBody ApiTestPostBody

// NewApiTestPostBody instantiates a new ApiTestPostBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTestPostBody(endpointId string, apiBindingId string) *ApiTestPostBody {
	this := ApiTestPostBody{}
	this.EndpointId = endpointId
	this.ApiBindingId = apiBindingId
	return &this
}

// NewApiTestPostBodyWithDefaults instantiates a new ApiTestPostBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTestPostBodyWithDefaults() *ApiTestPostBody {
	this := ApiTestPostBody{}
	return &this
}

// GetAuthSecretId returns the AuthSecretId field value if set, zero value otherwise.
func (o *ApiTestPostBody) GetAuthSecretId() string {
	if o == nil || IsNil(o.AuthSecretId) {
		var ret string
		return ret
	}
	return *o.AuthSecretId
}

// GetAuthSecretIdOk returns a tuple with the AuthSecretId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTestPostBody) GetAuthSecretIdOk() (*string, bool) {
	if o == nil || IsNil(o.AuthSecretId) {
		return nil, false
	}
	return o.AuthSecretId, true
}

// HasAuthSecretId returns a boolean if a field has been set.
func (o *ApiTestPostBody) HasAuthSecretId() bool {
	if o != nil && !IsNil(o.AuthSecretId) {
		return true
	}

	return false
}

// SetAuthSecretId gets a reference to the given string and assigns it to the AuthSecretId field.
func (o *ApiTestPostBody) SetAuthSecretId(v string) {
	o.AuthSecretId = &v
}

// GetUseTls returns the UseTls field value if set, zero value otherwise.
func (o *ApiTestPostBody) GetUseTls() bool {
	if o == nil || IsNil(o.UseTls) {
		var ret bool
		return ret
	}
	return *o.UseTls
}

// GetUseTlsOk returns a tuple with the UseTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTestPostBody) GetUseTlsOk() (*bool, bool) {
	if o == nil || IsNil(o.UseTls) {
		return nil, false
	}
	return o.UseTls, true
}

// HasUseTls returns a boolean if a field has been set.
func (o *ApiTestPostBody) HasUseTls() bool {
	if o != nil && !IsNil(o.UseTls) {
		return true
	}

	return false
}

// SetUseTls gets a reference to the given bool and assigns it to the UseTls field.
func (o *ApiTestPostBody) SetUseTls(v bool) {
	o.UseTls = &v
}

// GetEndpointId returns the EndpointId field value
func (o *ApiTestPostBody) GetEndpointId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndpointId
}

// GetEndpointIdOk returns a tuple with the EndpointId field value
// and a boolean to check if the value has been set.
func (o *ApiTestPostBody) GetEndpointIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndpointId, true
}

// SetEndpointId sets field value
func (o *ApiTestPostBody) SetEndpointId(v string) {
	o.EndpointId = v
}

// GetApiBindingId returns the ApiBindingId field value
func (o *ApiTestPostBody) GetApiBindingId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiBindingId
}

// GetApiBindingIdOk returns a tuple with the ApiBindingId field value
// and a boolean to check if the value has been set.
func (o *ApiTestPostBody) GetApiBindingIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiBindingId, true
}

// SetApiBindingId sets field value
func (o *ApiTestPostBody) SetApiBindingId(v string) {
	o.ApiBindingId = v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *ApiTestPostBody) GetBody() string {
	if o == nil || IsNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTestPostBody) GetBodyOk() (*string, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *ApiTestPostBody) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *ApiTestPostBody) SetBody(v string) {
	o.Body = &v
}

// GetHeaderKeys returns the HeaderKeys field value if set, zero value otherwise.
func (o *ApiTestPostBody) GetHeaderKeys() []string {
	if o == nil || IsNil(o.HeaderKeys) {
		var ret []string
		return ret
	}
	return o.HeaderKeys
}

// GetHeaderKeysOk returns a tuple with the HeaderKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTestPostBody) GetHeaderKeysOk() ([]string, bool) {
	if o == nil || IsNil(o.HeaderKeys) {
		return nil, false
	}
	return o.HeaderKeys, true
}

// HasHeaderKeys returns a boolean if a field has been set.
func (o *ApiTestPostBody) HasHeaderKeys() bool {
	if o != nil && !IsNil(o.HeaderKeys) {
		return true
	}

	return false
}

// SetHeaderKeys gets a reference to the given []string and assigns it to the HeaderKeys field.
func (o *ApiTestPostBody) SetHeaderKeys(v []string) {
	o.HeaderKeys = v
}

// GetHeaderValues returns the HeaderValues field value if set, zero value otherwise.
func (o *ApiTestPostBody) GetHeaderValues() []string {
	if o == nil || IsNil(o.HeaderValues) {
		var ret []string
		return ret
	}
	return o.HeaderValues
}

// GetHeaderValuesOk returns a tuple with the HeaderValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTestPostBody) GetHeaderValuesOk() ([]string, bool) {
	if o == nil || IsNil(o.HeaderValues) {
		return nil, false
	}
	return o.HeaderValues, true
}

// HasHeaderValues returns a boolean if a field has been set.
func (o *ApiTestPostBody) HasHeaderValues() bool {
	if o != nil && !IsNil(o.HeaderValues) {
		return true
	}

	return false
}

// SetHeaderValues gets a reference to the given []string and assigns it to the HeaderValues field.
func (o *ApiTestPostBody) SetHeaderValues(v []string) {
	o.HeaderValues = v
}

// GetCookieKeys returns the CookieKeys field value if set, zero value otherwise.
func (o *ApiTestPostBody) GetCookieKeys() []string {
	if o == nil || IsNil(o.CookieKeys) {
		var ret []string
		return ret
	}
	return o.CookieKeys
}

// GetCookieKeysOk returns a tuple with the CookieKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTestPostBody) GetCookieKeysOk() ([]string, bool) {
	if o == nil || IsNil(o.CookieKeys) {
		return nil, false
	}
	return o.CookieKeys, true
}

// HasCookieKeys returns a boolean if a field has been set.
func (o *ApiTestPostBody) HasCookieKeys() bool {
	if o != nil && !IsNil(o.CookieKeys) {
		return true
	}

	return false
}

// SetCookieKeys gets a reference to the given []string and assigns it to the CookieKeys field.
func (o *ApiTestPostBody) SetCookieKeys(v []string) {
	o.CookieKeys = v
}

// GetCookieValues returns the CookieValues field value if set, zero value otherwise.
func (o *ApiTestPostBody) GetCookieValues() []string {
	if o == nil || IsNil(o.CookieValues) {
		var ret []string
		return ret
	}
	return o.CookieValues
}

// GetCookieValuesOk returns a tuple with the CookieValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTestPostBody) GetCookieValuesOk() ([]string, bool) {
	if o == nil || IsNil(o.CookieValues) {
		return nil, false
	}
	return o.CookieValues, true
}

// HasCookieValues returns a boolean if a field has been set.
func (o *ApiTestPostBody) HasCookieValues() bool {
	if o != nil && !IsNil(o.CookieValues) {
		return true
	}

	return false
}

// SetCookieValues gets a reference to the given []string and assigns it to the CookieValues field.
func (o *ApiTestPostBody) SetCookieValues(v []string) {
	o.CookieValues = v
}

func (o ApiTestPostBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiTestPostBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthSecretId) {
		toSerialize["auth_secret_id"] = o.AuthSecretId
	}
	if !IsNil(o.UseTls) {
		toSerialize["use_tls"] = o.UseTls
	}
	toSerialize["endpoint_id"] = o.EndpointId
	toSerialize["api_binding_id"] = o.ApiBindingId
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !IsNil(o.HeaderKeys) {
		toSerialize["header_keys"] = o.HeaderKeys
	}
	if !IsNil(o.HeaderValues) {
		toSerialize["header_values"] = o.HeaderValues
	}
	if !IsNil(o.CookieKeys) {
		toSerialize["cookie_keys"] = o.CookieKeys
	}
	if !IsNil(o.CookieValues) {
		toSerialize["cookie_values"] = o.CookieValues
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApiTestPostBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"endpoint_id",
		"api_binding_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiTestPostBody := _ApiTestPostBody{}

	err = json.Unmarshal(data, &varApiTestPostBody)

	if err != nil {
		return err
	}

	*o = ApiTestPostBody(varApiTestPostBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auth_secret_id")
		delete(additionalProperties, "use_tls")
		delete(additionalProperties, "endpoint_id")
		delete(additionalProperties, "api_binding_id")
		delete(additionalProperties, "body")
		delete(additionalProperties, "header_keys")
		delete(additionalProperties, "header_values")
		delete(additionalProperties, "cookie_keys")
		delete(additionalProperties, "cookie_values")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApiTestPostBody struct {
	value *ApiTestPostBody
	isSet bool
}

func (v NullableApiTestPostBody) Get() *ApiTestPostBody {
	return v.value
}

func (v *NullableApiTestPostBody) Set(val *ApiTestPostBody) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTestPostBody) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTestPostBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTestPostBody(val *ApiTestPostBody) *NullableApiTestPostBody {
	return &NullableApiTestPostBody{value: val, isSet: true}
}

func (v NullableApiTestPostBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTestPostBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
