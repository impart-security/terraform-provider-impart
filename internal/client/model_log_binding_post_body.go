/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the LogBindingPostBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogBindingPostBody{}

// LogBindingPostBody struct for LogBindingPostBody
type LogBindingPostBody struct {
	Name        string  `json:"name"`
	SpecId      string  `json:"spec_id"`
	LogstreamId *string `json:"logstream_id,omitempty"`
	GrokPattern string  `json:"grok_pattern"`
}

type _LogBindingPostBody LogBindingPostBody

// NewLogBindingPostBody instantiates a new LogBindingPostBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogBindingPostBody(name string, specId string, grokPattern string) *LogBindingPostBody {
	this := LogBindingPostBody{}
	this.Name = name
	this.SpecId = specId
	this.GrokPattern = grokPattern
	return &this
}

// NewLogBindingPostBodyWithDefaults instantiates a new LogBindingPostBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogBindingPostBodyWithDefaults() *LogBindingPostBody {
	this := LogBindingPostBody{}
	return &this
}

// GetName returns the Name field value
func (o *LogBindingPostBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LogBindingPostBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LogBindingPostBody) SetName(v string) {
	o.Name = v
}

// GetSpecId returns the SpecId field value
func (o *LogBindingPostBody) GetSpecId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SpecId
}

// GetSpecIdOk returns a tuple with the SpecId field value
// and a boolean to check if the value has been set.
func (o *LogBindingPostBody) GetSpecIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpecId, true
}

// SetSpecId sets field value
func (o *LogBindingPostBody) SetSpecId(v string) {
	o.SpecId = v
}

// GetLogstreamId returns the LogstreamId field value if set, zero value otherwise.
func (o *LogBindingPostBody) GetLogstreamId() string {
	if o == nil || IsNil(o.LogstreamId) {
		var ret string
		return ret
	}
	return *o.LogstreamId
}

// GetLogstreamIdOk returns a tuple with the LogstreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogBindingPostBody) GetLogstreamIdOk() (*string, bool) {
	if o == nil || IsNil(o.LogstreamId) {
		return nil, false
	}
	return o.LogstreamId, true
}

// HasLogstreamId returns a boolean if a field has been set.
func (o *LogBindingPostBody) HasLogstreamId() bool {
	if o != nil && !IsNil(o.LogstreamId) {
		return true
	}

	return false
}

// SetLogstreamId gets a reference to the given string and assigns it to the LogstreamId field.
func (o *LogBindingPostBody) SetLogstreamId(v string) {
	o.LogstreamId = &v
}

// GetGrokPattern returns the GrokPattern field value
func (o *LogBindingPostBody) GetGrokPattern() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrokPattern
}

// GetGrokPatternOk returns a tuple with the GrokPattern field value
// and a boolean to check if the value has been set.
func (o *LogBindingPostBody) GetGrokPatternOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrokPattern, true
}

// SetGrokPattern sets field value
func (o *LogBindingPostBody) SetGrokPattern(v string) {
	o.GrokPattern = v
}

func (o LogBindingPostBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogBindingPostBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["spec_id"] = o.SpecId
	if !IsNil(o.LogstreamId) {
		toSerialize["logstream_id"] = o.LogstreamId
	}
	toSerialize["grok_pattern"] = o.GrokPattern
	return toSerialize, nil
}

func (o *LogBindingPostBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"spec_id",
		"grok_pattern",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogBindingPostBody := _LogBindingPostBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLogBindingPostBody)

	if err != nil {
		return err
	}

	*o = LogBindingPostBody(varLogBindingPostBody)

	return err
}

type NullableLogBindingPostBody struct {
	value *LogBindingPostBody
	isSet bool
}

func (v NullableLogBindingPostBody) Get() *LogBindingPostBody {
	return v.value
}

func (v *NullableLogBindingPostBody) Set(val *LogBindingPostBody) {
	v.value = val
	v.isSet = true
}

func (v NullableLogBindingPostBody) IsSet() bool {
	return v.isSet
}

func (v *NullableLogBindingPostBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogBindingPostBody(val *LogBindingPostBody) *NullableLogBindingPostBody {
	return &NullableLogBindingPostBody{value: val, isSet: true}
}

func (v NullableLogBindingPostBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogBindingPostBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
