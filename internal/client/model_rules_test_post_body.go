/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RulesTestPostBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RulesTestPostBody{}

// RulesTestPostBody struct for RulesTestPostBody
type RulesTestPostBody struct {
	Req    InspectorReqMsg `json:"req"`
	Res    InspectorResMsg `json:"res"`
	RuleId *string         `json:"rule_id,omitempty"`
	Src    *string         `json:"src,omitempty"`
}

type _RulesTestPostBody RulesTestPostBody

// NewRulesTestPostBody instantiates a new RulesTestPostBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRulesTestPostBody(req InspectorReqMsg, res InspectorResMsg) *RulesTestPostBody {
	this := RulesTestPostBody{}
	this.Req = req
	this.Res = res
	return &this
}

// NewRulesTestPostBodyWithDefaults instantiates a new RulesTestPostBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRulesTestPostBodyWithDefaults() *RulesTestPostBody {
	this := RulesTestPostBody{}
	return &this
}

// GetReq returns the Req field value
func (o *RulesTestPostBody) GetReq() InspectorReqMsg {
	if o == nil {
		var ret InspectorReqMsg
		return ret
	}

	return o.Req
}

// GetReqOk returns a tuple with the Req field value
// and a boolean to check if the value has been set.
func (o *RulesTestPostBody) GetReqOk() (*InspectorReqMsg, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Req, true
}

// SetReq sets field value
func (o *RulesTestPostBody) SetReq(v InspectorReqMsg) {
	o.Req = v
}

// GetRes returns the Res field value
func (o *RulesTestPostBody) GetRes() InspectorResMsg {
	if o == nil {
		var ret InspectorResMsg
		return ret
	}

	return o.Res
}

// GetResOk returns a tuple with the Res field value
// and a boolean to check if the value has been set.
func (o *RulesTestPostBody) GetResOk() (*InspectorResMsg, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Res, true
}

// SetRes sets field value
func (o *RulesTestPostBody) SetRes(v InspectorResMsg) {
	o.Res = v
}

// GetRuleId returns the RuleId field value if set, zero value otherwise.
func (o *RulesTestPostBody) GetRuleId() string {
	if o == nil || IsNil(o.RuleId) {
		var ret string
		return ret
	}
	return *o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RulesTestPostBody) GetRuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RuleId) {
		return nil, false
	}
	return o.RuleId, true
}

// HasRuleId returns a boolean if a field has been set.
func (o *RulesTestPostBody) HasRuleId() bool {
	if o != nil && !IsNil(o.RuleId) {
		return true
	}

	return false
}

// SetRuleId gets a reference to the given string and assigns it to the RuleId field.
func (o *RulesTestPostBody) SetRuleId(v string) {
	o.RuleId = &v
}

// GetSrc returns the Src field value if set, zero value otherwise.
func (o *RulesTestPostBody) GetSrc() string {
	if o == nil || IsNil(o.Src) {
		var ret string
		return ret
	}
	return *o.Src
}

// GetSrcOk returns a tuple with the Src field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RulesTestPostBody) GetSrcOk() (*string, bool) {
	if o == nil || IsNil(o.Src) {
		return nil, false
	}
	return o.Src, true
}

// HasSrc returns a boolean if a field has been set.
func (o *RulesTestPostBody) HasSrc() bool {
	if o != nil && !IsNil(o.Src) {
		return true
	}

	return false
}

// SetSrc gets a reference to the given string and assigns it to the Src field.
func (o *RulesTestPostBody) SetSrc(v string) {
	o.Src = &v
}

func (o RulesTestPostBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RulesTestPostBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["req"] = o.Req
	toSerialize["res"] = o.Res
	if !IsNil(o.RuleId) {
		toSerialize["rule_id"] = o.RuleId
	}
	if !IsNil(o.Src) {
		toSerialize["src"] = o.Src
	}
	return toSerialize, nil
}

func (o *RulesTestPostBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"req",
		"res",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRulesTestPostBody := _RulesTestPostBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRulesTestPostBody)

	if err != nil {
		return err
	}

	*o = RulesTestPostBody(varRulesTestPostBody)

	return err
}

type NullableRulesTestPostBody struct {
	value *RulesTestPostBody
	isSet bool
}

func (v NullableRulesTestPostBody) Get() *RulesTestPostBody {
	return v.value
}

func (v *NullableRulesTestPostBody) Set(val *RulesTestPostBody) {
	v.value = val
	v.isSet = true
}

func (v NullableRulesTestPostBody) IsSet() bool {
	return v.isSet
}

func (v *NullableRulesTestPostBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRulesTestPostBody(val *RulesTestPostBody) *NullableRulesTestPostBody {
	return &NullableRulesTestPostBody{value: val, isSet: true}
}

func (v NullableRulesTestPostBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRulesTestPostBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
