/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the NotificationTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationTemplate{}

// NotificationTemplate struct for NotificationTemplate
type NotificationTemplate struct {
	// The ID of the notification template.
	Id string `json:"id"`
	// The ID of the connector.
	ConnectorId string `json:"connector_id"`
	// The name of the notification template.
	Name string `json:"name"`
	// The text payload to be sent in a notification.
	Payload string `json:"payload"`
	// The text for the subject of the message payload.
	Subject string `json:"subject"`
	// An array of ids for where the notification should be sent.
	Destination []string `json:"destination"`
	// ID of the  member who created the notification template.
	CreatedBy string `json:"created_by"`
	// The date the notification template was created.
	CreatedAt time.Time `json:"created_at"`
	// ID of the member who last updated the notification template.
	UpdatedBy NullableString `json:"updated_by"`
	// The date of when the notification template was last updated.
	UpdatedAt NullableTime `json:"updated_at"`
}

type _NotificationTemplate NotificationTemplate

// NewNotificationTemplate instantiates a new NotificationTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationTemplate(id string, connectorId string, name string, payload string, subject string, destination []string, createdBy string, createdAt time.Time, updatedBy NullableString, updatedAt NullableTime) *NotificationTemplate {
	this := NotificationTemplate{}
	this.Id = id
	this.ConnectorId = connectorId
	this.Name = name
	this.Payload = payload
	this.Subject = subject
	this.Destination = destination
	this.CreatedBy = createdBy
	this.CreatedAt = createdAt
	this.UpdatedBy = updatedBy
	this.UpdatedAt = updatedAt
	return &this
}

// NewNotificationTemplateWithDefaults instantiates a new NotificationTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationTemplateWithDefaults() *NotificationTemplate {
	this := NotificationTemplate{}
	return &this
}

// GetId returns the Id field value
func (o *NotificationTemplate) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *NotificationTemplate) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *NotificationTemplate) SetId(v string) {
	o.Id = v
}

// GetConnectorId returns the ConnectorId field value
func (o *NotificationTemplate) GetConnectorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectorId
}

// GetConnectorIdOk returns a tuple with the ConnectorId field value
// and a boolean to check if the value has been set.
func (o *NotificationTemplate) GetConnectorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorId, true
}

// SetConnectorId sets field value
func (o *NotificationTemplate) SetConnectorId(v string) {
	o.ConnectorId = v
}

// GetName returns the Name field value
func (o *NotificationTemplate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NotificationTemplate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NotificationTemplate) SetName(v string) {
	o.Name = v
}

// GetPayload returns the Payload field value
func (o *NotificationTemplate) GetPayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *NotificationTemplate) GetPayloadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *NotificationTemplate) SetPayload(v string) {
	o.Payload = v
}

// GetSubject returns the Subject field value
func (o *NotificationTemplate) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *NotificationTemplate) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *NotificationTemplate) SetSubject(v string) {
	o.Subject = v
}

// GetDestination returns the Destination field value
func (o *NotificationTemplate) GetDestination() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *NotificationTemplate) GetDestinationOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Destination, true
}

// SetDestination sets field value
func (o *NotificationTemplate) SetDestination(v []string) {
	o.Destination = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *NotificationTemplate) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *NotificationTemplate) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *NotificationTemplate) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *NotificationTemplate) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *NotificationTemplate) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *NotificationTemplate) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedBy returns the UpdatedBy field value
// If the value is explicit nil, the zero value for string will be returned
func (o *NotificationTemplate) GetUpdatedBy() string {
	if o == nil || o.UpdatedBy.Get() == nil {
		var ret string
		return ret
	}

	return *o.UpdatedBy.Get()
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationTemplate) GetUpdatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedBy.Get(), o.UpdatedBy.IsSet()
}

// SetUpdatedBy sets field value
func (o *NotificationTemplate) SetUpdatedBy(v string) {
	o.UpdatedBy.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *NotificationTemplate) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationTemplate) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// SetUpdatedAt sets field value
func (o *NotificationTemplate) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

func (o NotificationTemplate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["connector_id"] = o.ConnectorId
	toSerialize["name"] = o.Name
	toSerialize["payload"] = o.Payload
	toSerialize["subject"] = o.Subject
	toSerialize["destination"] = o.Destination
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_by"] = o.UpdatedBy.Get()
	toSerialize["updated_at"] = o.UpdatedAt.Get()
	return toSerialize, nil
}

func (o *NotificationTemplate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"connector_id",
		"name",
		"payload",
		"subject",
		"destination",
		"created_by",
		"created_at",
		"updated_by",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNotificationTemplate := _NotificationTemplate{}

	decoder := json.NewDecoder(bytes.NewReader(data))

	err = decoder.Decode(&varNotificationTemplate)

	if err != nil {
		return err
	}

	*o = NotificationTemplate(varNotificationTemplate)

	return err
}

type NullableNotificationTemplate struct {
	value *NotificationTemplate
	isSet bool
}

func (v NullableNotificationTemplate) Get() *NotificationTemplate {
	return v.value
}

func (v *NullableNotificationTemplate) Set(val *NotificationTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationTemplate(val *NotificationTemplate) *NullableNotificationTemplate {
	return &NullableNotificationTemplate{value: val, isSet: true}
}

func (v NullableNotificationTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
