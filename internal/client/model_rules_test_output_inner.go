/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RulesTestOutputInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RulesTestOutputInner{}

// RulesTestOutputInner struct for RulesTestOutputInner
type RulesTestOutputInner struct {
	// The message.
	Message string `json:"message"`
	// The timestamp, this is the time since the start of the test in microseconds.
	Timestamp int32 `json:"timestamp"`
	// The destination of the message. Either \"stderr\" or \"stdout\".
	Destination string `json:"destination"`
}

type _RulesTestOutputInner RulesTestOutputInner

// NewRulesTestOutputInner instantiates a new RulesTestOutputInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRulesTestOutputInner(message string, timestamp int32, destination string) *RulesTestOutputInner {
	this := RulesTestOutputInner{}
	this.Message = message
	this.Timestamp = timestamp
	this.Destination = destination
	return &this
}

// NewRulesTestOutputInnerWithDefaults instantiates a new RulesTestOutputInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRulesTestOutputInnerWithDefaults() *RulesTestOutputInner {
	this := RulesTestOutputInner{}
	return &this
}

// GetMessage returns the Message field value
func (o *RulesTestOutputInner) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *RulesTestOutputInner) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *RulesTestOutputInner) SetMessage(v string) {
	o.Message = v
}

// GetTimestamp returns the Timestamp field value
func (o *RulesTestOutputInner) GetTimestamp() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *RulesTestOutputInner) GetTimestampOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *RulesTestOutputInner) SetTimestamp(v int32) {
	o.Timestamp = v
}

// GetDestination returns the Destination field value
func (o *RulesTestOutputInner) GetDestination() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *RulesTestOutputInner) GetDestinationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *RulesTestOutputInner) SetDestination(v string) {
	o.Destination = v
}

func (o RulesTestOutputInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RulesTestOutputInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["destination"] = o.Destination
	return toSerialize, nil
}

func (o *RulesTestOutputInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
		"timestamp",
		"destination",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRulesTestOutputInner := _RulesTestOutputInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRulesTestOutputInner)

	if err != nil {
		return err
	}

	*o = RulesTestOutputInner(varRulesTestOutputInner)

	return err
}

type NullableRulesTestOutputInner struct {
	value *RulesTestOutputInner
	isSet bool
}

func (v NullableRulesTestOutputInner) Get() *RulesTestOutputInner {
	return v.value
}

func (v *NullableRulesTestOutputInner) Set(val *RulesTestOutputInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRulesTestOutputInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRulesTestOutputInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRulesTestOutputInner(val *RulesTestOutputInner) *NullableRulesTestOutputInner {
	return &NullableRulesTestOutputInner{value: val, isSet: true}
}

func (v NullableRulesTestOutputInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRulesTestOutputInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
