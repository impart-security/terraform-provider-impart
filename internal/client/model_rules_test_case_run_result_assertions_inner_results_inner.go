/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// checks if the RulesTestCaseRunResultAssertionsInnerResultsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RulesTestCaseRunResultAssertionsInnerResultsInner{}

// RulesTestCaseRunResultAssertionsInnerResultsInner struct for RulesTestCaseRunResultAssertionsInnerResultsInner
type RulesTestCaseRunResultAssertionsInnerResultsInner struct {
	// The index of the message.
	MessageIndex      int32                                  `json:"message_index"`
	MessageDefinition RulesTestCaseMessageDefinitionPosition `json:"message_definition"`
	// Whether the assertion passed.
	Passed               bool `json:"passed"`
	AdditionalProperties map[string]interface{}
}

type _RulesTestCaseRunResultAssertionsInnerResultsInner RulesTestCaseRunResultAssertionsInnerResultsInner

// NewRulesTestCaseRunResultAssertionsInnerResultsInner instantiates a new RulesTestCaseRunResultAssertionsInnerResultsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRulesTestCaseRunResultAssertionsInnerResultsInner(messageIndex int32, messageDefinition RulesTestCaseMessageDefinitionPosition, passed bool) *RulesTestCaseRunResultAssertionsInnerResultsInner {
	this := RulesTestCaseRunResultAssertionsInnerResultsInner{}
	this.MessageIndex = messageIndex
	this.MessageDefinition = messageDefinition
	this.Passed = passed
	return &this
}

// NewRulesTestCaseRunResultAssertionsInnerResultsInnerWithDefaults instantiates a new RulesTestCaseRunResultAssertionsInnerResultsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRulesTestCaseRunResultAssertionsInnerResultsInnerWithDefaults() *RulesTestCaseRunResultAssertionsInnerResultsInner {
	this := RulesTestCaseRunResultAssertionsInnerResultsInner{}
	return &this
}

// GetMessageIndex returns the MessageIndex field value
func (o *RulesTestCaseRunResultAssertionsInnerResultsInner) GetMessageIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MessageIndex
}

// GetMessageIndexOk returns a tuple with the MessageIndex field value
// and a boolean to check if the value has been set.
func (o *RulesTestCaseRunResultAssertionsInnerResultsInner) GetMessageIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageIndex, true
}

// SetMessageIndex sets field value
func (o *RulesTestCaseRunResultAssertionsInnerResultsInner) SetMessageIndex(v int32) {
	o.MessageIndex = v
}

// GetMessageDefinition returns the MessageDefinition field value
func (o *RulesTestCaseRunResultAssertionsInnerResultsInner) GetMessageDefinition() RulesTestCaseMessageDefinitionPosition {
	if o == nil {
		var ret RulesTestCaseMessageDefinitionPosition
		return ret
	}

	return o.MessageDefinition
}

// GetMessageDefinitionOk returns a tuple with the MessageDefinition field value
// and a boolean to check if the value has been set.
func (o *RulesTestCaseRunResultAssertionsInnerResultsInner) GetMessageDefinitionOk() (*RulesTestCaseMessageDefinitionPosition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageDefinition, true
}

// SetMessageDefinition sets field value
func (o *RulesTestCaseRunResultAssertionsInnerResultsInner) SetMessageDefinition(v RulesTestCaseMessageDefinitionPosition) {
	o.MessageDefinition = v
}

// GetPassed returns the Passed field value
func (o *RulesTestCaseRunResultAssertionsInnerResultsInner) GetPassed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Passed
}

// GetPassedOk returns a tuple with the Passed field value
// and a boolean to check if the value has been set.
func (o *RulesTestCaseRunResultAssertionsInnerResultsInner) GetPassedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Passed, true
}

// SetPassed sets field value
func (o *RulesTestCaseRunResultAssertionsInnerResultsInner) SetPassed(v bool) {
	o.Passed = v
}

func (o RulesTestCaseRunResultAssertionsInnerResultsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RulesTestCaseRunResultAssertionsInnerResultsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message_index"] = o.MessageIndex
	toSerialize["message_definition"] = o.MessageDefinition
	toSerialize["passed"] = o.Passed

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RulesTestCaseRunResultAssertionsInnerResultsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message_index",
		"message_definition",
		"passed",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRulesTestCaseRunResultAssertionsInnerResultsInner := _RulesTestCaseRunResultAssertionsInnerResultsInner{}

	err = json.Unmarshal(data, &varRulesTestCaseRunResultAssertionsInnerResultsInner)

	if err != nil {
		return err
	}

	*o = RulesTestCaseRunResultAssertionsInnerResultsInner(varRulesTestCaseRunResultAssertionsInnerResultsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "message_index")
		delete(additionalProperties, "message_definition")
		delete(additionalProperties, "passed")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRulesTestCaseRunResultAssertionsInnerResultsInner struct {
	value *RulesTestCaseRunResultAssertionsInnerResultsInner
	isSet bool
}

func (v NullableRulesTestCaseRunResultAssertionsInnerResultsInner) Get() *RulesTestCaseRunResultAssertionsInnerResultsInner {
	return v.value
}

func (v *NullableRulesTestCaseRunResultAssertionsInnerResultsInner) Set(val *RulesTestCaseRunResultAssertionsInnerResultsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRulesTestCaseRunResultAssertionsInnerResultsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRulesTestCaseRunResultAssertionsInnerResultsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRulesTestCaseRunResultAssertionsInnerResultsInner(val *RulesTestCaseRunResultAssertionsInnerResultsInner) *NullableRulesTestCaseRunResultAssertionsInnerResultsInner {
	return &NullableRulesTestCaseRunResultAssertionsInnerResultsInner{value: val, isSet: true}
}

func (v NullableRulesTestCaseRunResultAssertionsInnerResultsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRulesTestCaseRunResultAssertionsInnerResultsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
