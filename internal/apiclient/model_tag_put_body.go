/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
)

// checks if the TagPutBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagPutBody{}

// TagPutBody struct for TagPutBody
type TagPutBody struct {
	// A description of the tag.
	Description *string `json:"description,omitempty"`
	// A risk statement for the tag.
	RiskStatement *string          `json:"risk_statement,omitempty"`
	Remediations  []TagRemediation `json:"remediations,omitempty"`
	// An external URL for the tag.
	ExternalUrl *string `json:"external_url,omitempty"`
	// The applied labels.
	Labels               []string `json:"labels,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TagPutBody TagPutBody

// NewTagPutBody instantiates a new TagPutBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagPutBody() *TagPutBody {
	this := TagPutBody{}
	return &this
}

// NewTagPutBodyWithDefaults instantiates a new TagPutBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagPutBodyWithDefaults() *TagPutBody {
	this := TagPutBody{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TagPutBody) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPutBody) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TagPutBody) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TagPutBody) SetDescription(v string) {
	o.Description = &v
}

// GetRiskStatement returns the RiskStatement field value if set, zero value otherwise.
func (o *TagPutBody) GetRiskStatement() string {
	if o == nil || IsNil(o.RiskStatement) {
		var ret string
		return ret
	}
	return *o.RiskStatement
}

// GetRiskStatementOk returns a tuple with the RiskStatement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPutBody) GetRiskStatementOk() (*string, bool) {
	if o == nil || IsNil(o.RiskStatement) {
		return nil, false
	}
	return o.RiskStatement, true
}

// HasRiskStatement returns a boolean if a field has been set.
func (o *TagPutBody) HasRiskStatement() bool {
	if o != nil && !IsNil(o.RiskStatement) {
		return true
	}

	return false
}

// SetRiskStatement gets a reference to the given string and assigns it to the RiskStatement field.
func (o *TagPutBody) SetRiskStatement(v string) {
	o.RiskStatement = &v
}

// GetRemediations returns the Remediations field value if set, zero value otherwise.
func (o *TagPutBody) GetRemediations() []TagRemediation {
	if o == nil || IsNil(o.Remediations) {
		var ret []TagRemediation
		return ret
	}
	return o.Remediations
}

// GetRemediationsOk returns a tuple with the Remediations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPutBody) GetRemediationsOk() ([]TagRemediation, bool) {
	if o == nil || IsNil(o.Remediations) {
		return nil, false
	}
	return o.Remediations, true
}

// HasRemediations returns a boolean if a field has been set.
func (o *TagPutBody) HasRemediations() bool {
	if o != nil && !IsNil(o.Remediations) {
		return true
	}

	return false
}

// SetRemediations gets a reference to the given []TagRemediation and assigns it to the Remediations field.
func (o *TagPutBody) SetRemediations(v []TagRemediation) {
	o.Remediations = v
}

// GetExternalUrl returns the ExternalUrl field value if set, zero value otherwise.
func (o *TagPutBody) GetExternalUrl() string {
	if o == nil || IsNil(o.ExternalUrl) {
		var ret string
		return ret
	}
	return *o.ExternalUrl
}

// GetExternalUrlOk returns a tuple with the ExternalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPutBody) GetExternalUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalUrl) {
		return nil, false
	}
	return o.ExternalUrl, true
}

// HasExternalUrl returns a boolean if a field has been set.
func (o *TagPutBody) HasExternalUrl() bool {
	if o != nil && !IsNil(o.ExternalUrl) {
		return true
	}

	return false
}

// SetExternalUrl gets a reference to the given string and assigns it to the ExternalUrl field.
func (o *TagPutBody) SetExternalUrl(v string) {
	o.ExternalUrl = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *TagPutBody) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagPutBody) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *TagPutBody) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *TagPutBody) SetLabels(v []string) {
	o.Labels = v
}

func (o TagPutBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagPutBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.RiskStatement) {
		toSerialize["risk_statement"] = o.RiskStatement
	}
	if !IsNil(o.Remediations) {
		toSerialize["remediations"] = o.Remediations
	}
	if !IsNil(o.ExternalUrl) {
		toSerialize["external_url"] = o.ExternalUrl
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TagPutBody) UnmarshalJSON(data []byte) (err error) {
	varTagPutBody := _TagPutBody{}

	err = json.Unmarshal(data, &varTagPutBody)

	if err != nil {
		return err
	}

	*o = TagPutBody(varTagPutBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "risk_statement")
		delete(additionalProperties, "remediations")
		delete(additionalProperties, "external_url")
		delete(additionalProperties, "labels")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTagPutBody struct {
	value *TagPutBody
	isSet bool
}

func (v NullableTagPutBody) Get() *TagPutBody {
	return v.value
}

func (v *NullableTagPutBody) Set(val *TagPutBody) {
	v.value = val
	v.isSet = true
}

func (v NullableTagPutBody) IsSet() bool {
	return v.isSet
}

func (v *NullableTagPutBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagPutBody(val *TagPutBody) *NullableTagPutBody {
	return &NullableTagPutBody{value: val, isSet: true}
}

func (v NullableTagPutBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagPutBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
