/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
	"fmt"
)

// checks if the RulesTestCaseMessageDefinitionPosition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RulesTestCaseMessageDefinitionPosition{}

// RulesTestCaseMessageDefinitionPosition struct for RulesTestCaseMessageDefinitionPosition
type RulesTestCaseMessageDefinitionPosition struct {
	// The index of the message definition.
	Index int32 `json:"index"`
	// The count of the message in the message definition.
	Count                int32 `json:"count"`
	AdditionalProperties map[string]interface{}
}

type _RulesTestCaseMessageDefinitionPosition RulesTestCaseMessageDefinitionPosition

// NewRulesTestCaseMessageDefinitionPosition instantiates a new RulesTestCaseMessageDefinitionPosition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRulesTestCaseMessageDefinitionPosition(index int32, count int32) *RulesTestCaseMessageDefinitionPosition {
	this := RulesTestCaseMessageDefinitionPosition{}
	this.Index = index
	this.Count = count
	return &this
}

// NewRulesTestCaseMessageDefinitionPositionWithDefaults instantiates a new RulesTestCaseMessageDefinitionPosition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRulesTestCaseMessageDefinitionPositionWithDefaults() *RulesTestCaseMessageDefinitionPosition {
	this := RulesTestCaseMessageDefinitionPosition{}
	return &this
}

// GetIndex returns the Index field value
func (o *RulesTestCaseMessageDefinitionPosition) GetIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *RulesTestCaseMessageDefinitionPosition) GetIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *RulesTestCaseMessageDefinitionPosition) SetIndex(v int32) {
	o.Index = v
}

// GetCount returns the Count field value
func (o *RulesTestCaseMessageDefinitionPosition) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *RulesTestCaseMessageDefinitionPosition) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *RulesTestCaseMessageDefinitionPosition) SetCount(v int32) {
	o.Count = v
}

func (o RulesTestCaseMessageDefinitionPosition) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RulesTestCaseMessageDefinitionPosition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["index"] = o.Index
	toSerialize["count"] = o.Count

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RulesTestCaseMessageDefinitionPosition) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"index",
		"count",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRulesTestCaseMessageDefinitionPosition := _RulesTestCaseMessageDefinitionPosition{}

	err = json.Unmarshal(data, &varRulesTestCaseMessageDefinitionPosition)

	if err != nil {
		return err
	}

	*o = RulesTestCaseMessageDefinitionPosition(varRulesTestCaseMessageDefinitionPosition)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "index")
		delete(additionalProperties, "count")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRulesTestCaseMessageDefinitionPosition struct {
	value *RulesTestCaseMessageDefinitionPosition
	isSet bool
}

func (v NullableRulesTestCaseMessageDefinitionPosition) Get() *RulesTestCaseMessageDefinitionPosition {
	return v.value
}

func (v *NullableRulesTestCaseMessageDefinitionPosition) Set(val *RulesTestCaseMessageDefinitionPosition) {
	v.value = val
	v.isSet = true
}

func (v NullableRulesTestCaseMessageDefinitionPosition) IsSet() bool {
	return v.isSet
}

func (v *NullableRulesTestCaseMessageDefinitionPosition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRulesTestCaseMessageDefinitionPosition(val *RulesTestCaseMessageDefinitionPosition) *NullableRulesTestCaseMessageDefinitionPosition {
	return &NullableRulesTestCaseMessageDefinitionPosition{value: val, isSet: true}
}

func (v NullableRulesTestCaseMessageDefinitionPosition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRulesTestCaseMessageDefinitionPosition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
