/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
	"fmt"
)

// checks if the SpecLearningConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpecLearningConfig{}

// SpecLearningConfig struct for SpecLearningConfig
type SpecLearningConfig struct {
	LearningMode SpecLearningMode `json:"learning_mode"`
	// Include request headers during spec learning.
	IncludeRequestHeaders bool `json:"include_request_headers"`
	// Include response headers during spec learning.
	IncludeResponseHeaders bool `json:"include_response_headers"`
	// Include query parameters during spec learning.
	IncludeQueryParams bool `json:"include_query_params"`
	// Include request body during spec learning.
	IncludeRequestBody bool `json:"include_request_body"`
	// Include response body during spec learning.
	IncludeResponseBody  bool `json:"include_response_body"`
	AdditionalProperties map[string]interface{}
}

type _SpecLearningConfig SpecLearningConfig

// NewSpecLearningConfig instantiates a new SpecLearningConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecLearningConfig(learningMode SpecLearningMode, includeRequestHeaders bool, includeResponseHeaders bool, includeQueryParams bool, includeRequestBody bool, includeResponseBody bool) *SpecLearningConfig {
	this := SpecLearningConfig{}
	this.LearningMode = learningMode
	this.IncludeRequestHeaders = includeRequestHeaders
	this.IncludeResponseHeaders = includeResponseHeaders
	this.IncludeQueryParams = includeQueryParams
	this.IncludeRequestBody = includeRequestBody
	this.IncludeResponseBody = includeResponseBody
	return &this
}

// NewSpecLearningConfigWithDefaults instantiates a new SpecLearningConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecLearningConfigWithDefaults() *SpecLearningConfig {
	this := SpecLearningConfig{}
	return &this
}

// GetLearningMode returns the LearningMode field value
func (o *SpecLearningConfig) GetLearningMode() SpecLearningMode {
	if o == nil {
		var ret SpecLearningMode
		return ret
	}

	return o.LearningMode
}

// GetLearningModeOk returns a tuple with the LearningMode field value
// and a boolean to check if the value has been set.
func (o *SpecLearningConfig) GetLearningModeOk() (*SpecLearningMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LearningMode, true
}

// SetLearningMode sets field value
func (o *SpecLearningConfig) SetLearningMode(v SpecLearningMode) {
	o.LearningMode = v
}

// GetIncludeRequestHeaders returns the IncludeRequestHeaders field value
func (o *SpecLearningConfig) GetIncludeRequestHeaders() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludeRequestHeaders
}

// GetIncludeRequestHeadersOk returns a tuple with the IncludeRequestHeaders field value
// and a boolean to check if the value has been set.
func (o *SpecLearningConfig) GetIncludeRequestHeadersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludeRequestHeaders, true
}

// SetIncludeRequestHeaders sets field value
func (o *SpecLearningConfig) SetIncludeRequestHeaders(v bool) {
	o.IncludeRequestHeaders = v
}

// GetIncludeResponseHeaders returns the IncludeResponseHeaders field value
func (o *SpecLearningConfig) GetIncludeResponseHeaders() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludeResponseHeaders
}

// GetIncludeResponseHeadersOk returns a tuple with the IncludeResponseHeaders field value
// and a boolean to check if the value has been set.
func (o *SpecLearningConfig) GetIncludeResponseHeadersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludeResponseHeaders, true
}

// SetIncludeResponseHeaders sets field value
func (o *SpecLearningConfig) SetIncludeResponseHeaders(v bool) {
	o.IncludeResponseHeaders = v
}

// GetIncludeQueryParams returns the IncludeQueryParams field value
func (o *SpecLearningConfig) GetIncludeQueryParams() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludeQueryParams
}

// GetIncludeQueryParamsOk returns a tuple with the IncludeQueryParams field value
// and a boolean to check if the value has been set.
func (o *SpecLearningConfig) GetIncludeQueryParamsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludeQueryParams, true
}

// SetIncludeQueryParams sets field value
func (o *SpecLearningConfig) SetIncludeQueryParams(v bool) {
	o.IncludeQueryParams = v
}

// GetIncludeRequestBody returns the IncludeRequestBody field value
func (o *SpecLearningConfig) GetIncludeRequestBody() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludeRequestBody
}

// GetIncludeRequestBodyOk returns a tuple with the IncludeRequestBody field value
// and a boolean to check if the value has been set.
func (o *SpecLearningConfig) GetIncludeRequestBodyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludeRequestBody, true
}

// SetIncludeRequestBody sets field value
func (o *SpecLearningConfig) SetIncludeRequestBody(v bool) {
	o.IncludeRequestBody = v
}

// GetIncludeResponseBody returns the IncludeResponseBody field value
func (o *SpecLearningConfig) GetIncludeResponseBody() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludeResponseBody
}

// GetIncludeResponseBodyOk returns a tuple with the IncludeResponseBody field value
// and a boolean to check if the value has been set.
func (o *SpecLearningConfig) GetIncludeResponseBodyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludeResponseBody, true
}

// SetIncludeResponseBody sets field value
func (o *SpecLearningConfig) SetIncludeResponseBody(v bool) {
	o.IncludeResponseBody = v
}

func (o SpecLearningConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpecLearningConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["learning_mode"] = o.LearningMode
	toSerialize["include_request_headers"] = o.IncludeRequestHeaders
	toSerialize["include_response_headers"] = o.IncludeResponseHeaders
	toSerialize["include_query_params"] = o.IncludeQueryParams
	toSerialize["include_request_body"] = o.IncludeRequestBody
	toSerialize["include_response_body"] = o.IncludeResponseBody

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SpecLearningConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"learning_mode",
		"include_request_headers",
		"include_response_headers",
		"include_query_params",
		"include_request_body",
		"include_response_body",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSpecLearningConfig := _SpecLearningConfig{}

	err = json.Unmarshal(data, &varSpecLearningConfig)

	if err != nil {
		return err
	}

	*o = SpecLearningConfig(varSpecLearningConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "learning_mode")
		delete(additionalProperties, "include_request_headers")
		delete(additionalProperties, "include_response_headers")
		delete(additionalProperties, "include_query_params")
		delete(additionalProperties, "include_request_body")
		delete(additionalProperties, "include_response_body")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSpecLearningConfig struct {
	value *SpecLearningConfig
	isSet bool
}

func (v NullableSpecLearningConfig) Get() *SpecLearningConfig {
	return v.value
}

func (v *NullableSpecLearningConfig) Set(val *SpecLearningConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecLearningConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecLearningConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecLearningConfig(val *SpecLearningConfig) *NullableSpecLearningConfig {
	return &NullableSpecLearningConfig{value: val, isSet: true}
}

func (v NullableSpecLearningConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecLearningConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}