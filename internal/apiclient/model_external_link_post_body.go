/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
	"fmt"
)

// checks if the ExternalLinkPostBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalLinkPostBody{}

// ExternalLinkPostBody struct for ExternalLinkPostBody
type ExternalLinkPostBody struct {
	// The name of the external link.
	Name string `json:"name"`
	// The description of the external link.
	Description *string `json:"description,omitempty"`
	// A list of spec IDs this external link applies to (empty means all).
	SpecIds []string `json:"spec_ids,omitempty"`
	// The entity to which the links should be applied.
	Entity string `json:"entity"`
	// A JSONPath to the element for which this link should apply (e.g. `$.client_ip.address`).
	JsonPathElement string `json:"json_path_element"`
	// The external URL template with JSONPath element variables.
	Url string `json:"url"`
	// The vendor for the external link.
	Vendor               string `json:"vendor"`
	AdditionalProperties map[string]interface{}
}

type _ExternalLinkPostBody ExternalLinkPostBody

// NewExternalLinkPostBody instantiates a new ExternalLinkPostBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalLinkPostBody(name string, entity string, jsonPathElement string, url string, vendor string) *ExternalLinkPostBody {
	this := ExternalLinkPostBody{}
	this.Name = name
	this.Entity = entity
	this.JsonPathElement = jsonPathElement
	this.Url = url
	this.Vendor = vendor
	return &this
}

// NewExternalLinkPostBodyWithDefaults instantiates a new ExternalLinkPostBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalLinkPostBodyWithDefaults() *ExternalLinkPostBody {
	this := ExternalLinkPostBody{}
	return &this
}

// GetName returns the Name field value
func (o *ExternalLinkPostBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ExternalLinkPostBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ExternalLinkPostBody) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ExternalLinkPostBody) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalLinkPostBody) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ExternalLinkPostBody) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ExternalLinkPostBody) SetDescription(v string) {
	o.Description = &v
}

// GetSpecIds returns the SpecIds field value if set, zero value otherwise.
func (o *ExternalLinkPostBody) GetSpecIds() []string {
	if o == nil || IsNil(o.SpecIds) {
		var ret []string
		return ret
	}
	return o.SpecIds
}

// GetSpecIdsOk returns a tuple with the SpecIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalLinkPostBody) GetSpecIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SpecIds) {
		return nil, false
	}
	return o.SpecIds, true
}

// HasSpecIds returns a boolean if a field has been set.
func (o *ExternalLinkPostBody) HasSpecIds() bool {
	if o != nil && !IsNil(o.SpecIds) {
		return true
	}

	return false
}

// SetSpecIds gets a reference to the given []string and assigns it to the SpecIds field.
func (o *ExternalLinkPostBody) SetSpecIds(v []string) {
	o.SpecIds = v
}

// GetEntity returns the Entity field value
func (o *ExternalLinkPostBody) GetEntity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Entity
}

// GetEntityOk returns a tuple with the Entity field value
// and a boolean to check if the value has been set.
func (o *ExternalLinkPostBody) GetEntityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entity, true
}

// SetEntity sets field value
func (o *ExternalLinkPostBody) SetEntity(v string) {
	o.Entity = v
}

// GetJsonPathElement returns the JsonPathElement field value
func (o *ExternalLinkPostBody) GetJsonPathElement() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JsonPathElement
}

// GetJsonPathElementOk returns a tuple with the JsonPathElement field value
// and a boolean to check if the value has been set.
func (o *ExternalLinkPostBody) GetJsonPathElementOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JsonPathElement, true
}

// SetJsonPathElement sets field value
func (o *ExternalLinkPostBody) SetJsonPathElement(v string) {
	o.JsonPathElement = v
}

// GetUrl returns the Url field value
func (o *ExternalLinkPostBody) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ExternalLinkPostBody) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ExternalLinkPostBody) SetUrl(v string) {
	o.Url = v
}

// GetVendor returns the Vendor field value
func (o *ExternalLinkPostBody) GetVendor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value
// and a boolean to check if the value has been set.
func (o *ExternalLinkPostBody) GetVendorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vendor, true
}

// SetVendor sets field value
func (o *ExternalLinkPostBody) SetVendor(v string) {
	o.Vendor = v
}

func (o ExternalLinkPostBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalLinkPostBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.SpecIds) {
		toSerialize["spec_ids"] = o.SpecIds
	}
	toSerialize["entity"] = o.Entity
	toSerialize["json_path_element"] = o.JsonPathElement
	toSerialize["url"] = o.Url
	toSerialize["vendor"] = o.Vendor

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExternalLinkPostBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"entity",
		"json_path_element",
		"url",
		"vendor",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalLinkPostBody := _ExternalLinkPostBody{}

	err = json.Unmarshal(data, &varExternalLinkPostBody)

	if err != nil {
		return err
	}

	*o = ExternalLinkPostBody(varExternalLinkPostBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "spec_ids")
		delete(additionalProperties, "entity")
		delete(additionalProperties, "json_path_element")
		delete(additionalProperties, "url")
		delete(additionalProperties, "vendor")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExternalLinkPostBody struct {
	value *ExternalLinkPostBody
	isSet bool
}

func (v NullableExternalLinkPostBody) Get() *ExternalLinkPostBody {
	return v.value
}

func (v *NullableExternalLinkPostBody) Set(val *ExternalLinkPostBody) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalLinkPostBody) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalLinkPostBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalLinkPostBody(val *ExternalLinkPostBody) *NullableExternalLinkPostBody {
	return &NullableExternalLinkPostBody{value: val, isSet: true}
}

func (v NullableExternalLinkPostBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalLinkPostBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
