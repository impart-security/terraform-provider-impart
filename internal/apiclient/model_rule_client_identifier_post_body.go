/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
	"fmt"
)

// checks if the RuleClientIdentifierPostBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RuleClientIdentifierPostBody{}

// RuleClientIdentifierPostBody struct for RuleClientIdentifierPostBody
type RuleClientIdentifierPostBody struct {
	Name                 string                          `json:"name"`
	Description          *string                         `json:"description,omitempty"`
	HashFields           []RuleClientIdentifierHashField `json:"hash_fields"`
	StorageId            *string                         `json:"storage_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RuleClientIdentifierPostBody RuleClientIdentifierPostBody

// NewRuleClientIdentifierPostBody instantiates a new RuleClientIdentifierPostBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleClientIdentifierPostBody(name string, hashFields []RuleClientIdentifierHashField) *RuleClientIdentifierPostBody {
	this := RuleClientIdentifierPostBody{}
	this.Name = name
	this.HashFields = hashFields
	return &this
}

// NewRuleClientIdentifierPostBodyWithDefaults instantiates a new RuleClientIdentifierPostBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleClientIdentifierPostBodyWithDefaults() *RuleClientIdentifierPostBody {
	this := RuleClientIdentifierPostBody{}
	return &this
}

// GetName returns the Name field value
func (o *RuleClientIdentifierPostBody) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RuleClientIdentifierPostBody) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RuleClientIdentifierPostBody) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RuleClientIdentifierPostBody) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleClientIdentifierPostBody) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RuleClientIdentifierPostBody) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RuleClientIdentifierPostBody) SetDescription(v string) {
	o.Description = &v
}

// GetHashFields returns the HashFields field value
func (o *RuleClientIdentifierPostBody) GetHashFields() []RuleClientIdentifierHashField {
	if o == nil {
		var ret []RuleClientIdentifierHashField
		return ret
	}

	return o.HashFields
}

// GetHashFieldsOk returns a tuple with the HashFields field value
// and a boolean to check if the value has been set.
func (o *RuleClientIdentifierPostBody) GetHashFieldsOk() ([]RuleClientIdentifierHashField, bool) {
	if o == nil {
		return nil, false
	}
	return o.HashFields, true
}

// SetHashFields sets field value
func (o *RuleClientIdentifierPostBody) SetHashFields(v []RuleClientIdentifierHashField) {
	o.HashFields = v
}

// GetStorageId returns the StorageId field value if set, zero value otherwise.
func (o *RuleClientIdentifierPostBody) GetStorageId() string {
	if o == nil || IsNil(o.StorageId) {
		var ret string
		return ret
	}
	return *o.StorageId
}

// GetStorageIdOk returns a tuple with the StorageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleClientIdentifierPostBody) GetStorageIdOk() (*string, bool) {
	if o == nil || IsNil(o.StorageId) {
		return nil, false
	}
	return o.StorageId, true
}

// HasStorageId returns a boolean if a field has been set.
func (o *RuleClientIdentifierPostBody) HasStorageId() bool {
	if o != nil && !IsNil(o.StorageId) {
		return true
	}

	return false
}

// SetStorageId gets a reference to the given string and assigns it to the StorageId field.
func (o *RuleClientIdentifierPostBody) SetStorageId(v string) {
	o.StorageId = &v
}

func (o RuleClientIdentifierPostBody) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RuleClientIdentifierPostBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["hash_fields"] = o.HashFields
	if !IsNil(o.StorageId) {
		toSerialize["storage_id"] = o.StorageId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RuleClientIdentifierPostBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"hash_fields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRuleClientIdentifierPostBody := _RuleClientIdentifierPostBody{}

	err = json.Unmarshal(data, &varRuleClientIdentifierPostBody)

	if err != nil {
		return err
	}

	*o = RuleClientIdentifierPostBody(varRuleClientIdentifierPostBody)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "hash_fields")
		delete(additionalProperties, "storage_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRuleClientIdentifierPostBody struct {
	value *RuleClientIdentifierPostBody
	isSet bool
}

func (v NullableRuleClientIdentifierPostBody) Get() *RuleClientIdentifierPostBody {
	return v.value
}

func (v *NullableRuleClientIdentifierPostBody) Set(val *RuleClientIdentifierPostBody) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleClientIdentifierPostBody) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleClientIdentifierPostBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleClientIdentifierPostBody(val *RuleClientIdentifierPostBody) *NullableRuleClientIdentifierPostBody {
	return &NullableRuleClientIdentifierPostBody{value: val, isSet: true}
}

func (v NullableRuleClientIdentifierPostBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleClientIdentifierPostBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
