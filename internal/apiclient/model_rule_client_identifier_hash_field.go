/*
Impart Security v0 REST API

Imparts v0 REST API.

API version: 0.0.0
Contact: support@impart.security
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiclient

import (
	"encoding/json"
	"fmt"
)

// checks if the RuleClientIdentifierHashField type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RuleClientIdentifierHashField{}

// RuleClientIdentifierHashField struct for RuleClientIdentifierHashField
type RuleClientIdentifierHashField struct {
	// The field to use in the hash.
	Field string `json:"field"`
	// An optional key for the field.
	Key                  *string `json:"key,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RuleClientIdentifierHashField RuleClientIdentifierHashField

// NewRuleClientIdentifierHashField instantiates a new RuleClientIdentifierHashField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleClientIdentifierHashField(field string) *RuleClientIdentifierHashField {
	this := RuleClientIdentifierHashField{}
	this.Field = field
	return &this
}

// NewRuleClientIdentifierHashFieldWithDefaults instantiates a new RuleClientIdentifierHashField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleClientIdentifierHashFieldWithDefaults() *RuleClientIdentifierHashField {
	this := RuleClientIdentifierHashField{}
	return &this
}

// GetField returns the Field field value
func (o *RuleClientIdentifierHashField) GetField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *RuleClientIdentifierHashField) GetFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *RuleClientIdentifierHashField) SetField(v string) {
	o.Field = v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *RuleClientIdentifierHashField) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleClientIdentifierHashField) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *RuleClientIdentifierHashField) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *RuleClientIdentifierHashField) SetKey(v string) {
	o.Key = &v
}

func (o RuleClientIdentifierHashField) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RuleClientIdentifierHashField) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["field"] = o.Field
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RuleClientIdentifierHashField) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"field",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRuleClientIdentifierHashField := _RuleClientIdentifierHashField{}

	err = json.Unmarshal(data, &varRuleClientIdentifierHashField)

	if err != nil {
		return err
	}

	*o = RuleClientIdentifierHashField(varRuleClientIdentifierHashField)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "field")
		delete(additionalProperties, "key")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRuleClientIdentifierHashField struct {
	value *RuleClientIdentifierHashField
	isSet bool
}

func (v NullableRuleClientIdentifierHashField) Get() *RuleClientIdentifierHashField {
	return v.value
}

func (v *NullableRuleClientIdentifierHashField) Set(val *RuleClientIdentifierHashField) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleClientIdentifierHashField) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleClientIdentifierHashField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleClientIdentifierHashField(val *RuleClientIdentifierHashField) *NullableRuleClientIdentifierHashField {
	return &NullableRuleClientIdentifierHashField{value: val, isSet: true}
}

func (v NullableRuleClientIdentifierHashField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleClientIdentifierHashField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
